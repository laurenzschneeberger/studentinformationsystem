@page
@model StudentInformationSystem.Pages.AnalyticsModel
@{
    ViewData["Title"] = "Analytics Dashboard";
}

<style>
    /* Consistent styling with homepage */
    .page-header {
        background: linear-gradient(135deg, #f5f7fa 0%, #e4edf9 100%);
        border-radius: 15px;
        padding: 2.5rem 2rem;
        margin-bottom: 2rem;
        position: relative;
        overflow: hidden;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
    }

    .page-header::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23000000' fill-opacity='0.03'%3E%3Cpath opacity='.5' d='M96 95h4v1h-4v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9zm-1 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9z'/%3E%3Cpath d='M6 5V0H5v5H0v1h5v94h1V6h94V5H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
    }

    .page-title {
        font-size: 2.5rem;
        color: #2c3e50;
        margin-bottom: 0.5rem;
        font-weight: 700;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.05);
    }

    .page-subtitle {
        font-size: 1.2rem;
        color: #34495e;
        font-weight: 300;
        max-width: 600px;
    }

    .floating-shapes {
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        z-index: 0;
        overflow: hidden;
        pointer-events: none;
    }

    .shape {
        position: absolute;
        background: rgba(52, 152, 219, 0.1);
        border-radius: 50%;
    }

    .shape-1 {
        width: 60px;
        height: 60px;
        top: 20%;
        right: 10%;
        animation: float 8s ease-in-out infinite;
    }

    .shape-2 {
        width: 40px;
        height: 40px;
        bottom: 20%;
        right: 30%;
        animation: float 9s ease-in-out infinite 1s;
    }

    /* Enhance cards */
    .student-card {
        border: none;
        border-radius: 15px;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.08);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        overflow: hidden;
        margin-bottom: 1.5rem;
    }

    .student-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 12px 25px rgba(0, 0, 0, 0.12);
    }

    .card-header {
        background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);
        border-bottom: 1px solid rgba(0, 0, 0, 0.05);
        padding: 1.25rem 1.5rem;
    }

    .card-header h4 {
        margin: 0;
        font-weight: 600;
        color: #2c3e50;
        font-size: 1.4rem;
    }

    /* Make sure charts can fill their container */
    .chart-fixed-height {
        height: 450px;
        position: relative;
        padding: 1rem;
        /* So the edges have plenty of space */
    }

    .chart-taller {
        height: 350px;
        /* Reduced from the earlier 600px */
        position: relative;
    }

    .chart-inner-absolute {
        position: absolute;
        inset: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        /* Centers the doughnut chart */
    }

    @@keyframes float {
        0% {
            transform: translateY(0) rotate(0deg);
        }

        50% {
            transform: translateY(-20px) rotate(10deg);
        }

        100% {
            transform: translateY(0) rotate(0deg);
        }
    }
</style>

<div class="container">
    <section class="page-header position-relative mb-5">
        <div class="floating-shapes">
            <div class="shape shape-1"></div>
            <div class="shape shape-2"></div>
        </div>
        <div class="position-relative">
            <h1 class="page-title">Analytics Dashboard</h1>
            <p class="page-subtitle">Gain valuable insights into your institution's data. Track student enrollments,
                analyze course
                distributions, and monitor trends over time.</p>
        </div>
    </section>

    <div class="row mb-4">
        <div class="col-md-6">
            <div class="student-card h-100">
                <div class="card-header">
                    <h4><i class="bi bi-bar-chart me-2"></i> Students per Course</h4>
                </div>
                <div class="card-body chart-fixed-height">
                    <div class="chart-inner-absolute">
                        <canvas id="courseEnrollmentChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="student-card h-100">
                <div class="card-header">
                    <h4><i class="bi bi-pie-chart me-2"></i> Course Format Distribution</h4>
                </div>
                <div class="card-body chart-fixed-height">
                    <div class="chart-inner-absolute">
                        <canvas id="formatChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="student-card">
                <div class="card-header">
                    <h4><i class="bi bi-graph-up me-2"></i> Cumulative Student Enrollments</h4>
                </div>
                <div class="card-body chart-taller">
                    <div class="chart-inner-absolute">
                        <canvas id="enrollmentChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/moment"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-moment"></script>
<script>
    // Parse the JSON data
    const enrollmentData = @Html.Raw(Model.EnrollmentData ?? "[]");
    const formatData = @Html.Raw(Model.CourseFormatData ?? "[]");
    const courseEnrollmentData = @Html.Raw(Model.CourseEnrollmentData ?? "[]");

    document.addEventListener('DOMContentLoaded', function () {
        // Course Enrollment Chart
        new Chart(document.getElementById('courseEnrollmentChart'), {
            type: 'bar',
            data: {
                labels: courseEnrollmentData.map(item => item.courseName),
                datasets: [{
                    label: 'Number of Students',
                    data: courseEnrollmentData.map(item => item.studentCount),
                    backgroundColor: [
                        '#316CF4',    // Blue
                        '#E8E8E8',    // Light gray
                        '#999999',    // Medium gray
                        '#4A4A4A'     // Dark gray
                    ],
                    borderColor: [
                        '#316CF4',
                        '#E8E8E8',
                        '#999999',
                        '#4A4A4A'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                layout: {
                    padding: {
                        right: 20,
                        left: 10,
                        top: 20,
                        bottom: 20
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        grid: { display: false },
                        ticks: {
                            stepSize: 1,
                            color: 'black',
                            font: { size: 14 },
                            padding: 10
                        }
                    },
                    x: {
                        grid: { display: false },
                        ticks: {
                            color: 'black',
                            maxRotation: 45,
                            minRotation: 45,
                            font: { size: 14 }
                        }
                    }
                },
                plugins: {
                    legend: {
                        display: false
                    }
                }
            }
        });

        // Course Format Chart
        new Chart(document.getElementById('formatChart'), {
            type: 'doughnut',
            data: {
                labels: formatData.map(item => item.format || 'Unknown'),
                datasets: [{
                    data: formatData.map(item => item.count),
                    backgroundColor: [
                        '#316CF4',    // Blue
                        '#E8E8E8',    // Light gray
                        '#4A4A4A'     // Dark gray
                    ]
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'bottom',
                        labels: {
                            color: 'black',
                            font: { size: 14 },
                            padding: 20
                        }
                    }
                },
                cutout: '60%'
            }
        });

        // Enrollment Chart
        const enrollmentCtx = document.getElementById('enrollmentChart').getContext('2d');
        new Chart(enrollmentCtx, {
            type: 'line',
            data: {
                datasets: [{
                    label: 'Cumulative Enrollments',
                    data: enrollmentData,
                    borderColor: '#316CF4',
                    tension: 0.1,
                    fill: false,
                    borderWidth: 2,
                    pointRadius: 4,
                    pointBackgroundColor: '#316CF4'
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                layout: {
                    padding: {
                        right: 20,
                        left: 10,
                        top: 20,
                        bottom: 20
                    }
                },
                plugins: {
                    legend: { display: false }
                },
                scales: {
                    x: {
                        type: 'time',
                        time: {
                            parser: 'YYYY-MM-DD',
                            unit: 'month',
                            displayFormats: {
                                month: 'MMM YYYY'
                            }
                        },
                        grid: { display: false },
                        ticks: {
                            color: 'black',
                            maxRotation: 45,
                            minRotation: 45,
                            font: { size: 14 }
                        }
                    },
                    y: {
                        beginAtZero: true,
                        grid: { display: false },
                        ticks: {
                            color: 'black',
                            font: { size: 14 },
                            stepSize: 1,
                            padding: 10
                        },
                        suggestedMin: 0,
                        suggestedMax: 8,
                        afterFit: function (scaleInstance) {
                            scaleInstance.width = 50; // More space for y-axis
                        }
                    }
                }
            }
        });
    });
</script>
}